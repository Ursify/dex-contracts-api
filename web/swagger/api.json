{
    "definitions": {
        "CancelOrderParameters": {
            "description": "Cancel order request parameters.",
            "properties": {
                "address": {
                    "$ref": "#/definitions/GYAddressBech32"
                },
                "collateral": {
                    "$ref": "#/definitions/GYTxOutRef"
                },
                "order_references": {
                    "items": {
                        "$ref": "#/definitions/GYTxOutRef"
                    },
                    "type": "array"
                }
            },
            "required": [
                "address",
                "collateral",
                "order_references"
            ],
            "type": "object"
        },
        "CancelOrderTransactionDetails": {
            "properties": {
                "transaction": {
                    "$ref": "#/definitions/GYTx"
                },
                "transaction_fee": {
                    "exclusiveMinimum": false,
                    "minimum": 0,
                    "type": "integer"
                },
                "transaction_id": {
                    "$ref": "#/definitions/GYTxId"
                }
            },
            "required": [
                "transaction",
                "transaction_id",
                "transaction_fee"
            ],
            "type": "object"
        },
        "GYAddressBech32": {
            "description": "An address, serialised as Bech32.",
            "example": "addr_test1qrsuhwqdhz0zjgnf46unas27h93amfghddnff8lpc2n28rgmjv8f77ka0zshfgssqr5cnl64zdnde5f8q2xt923e7ctqu49mg5",
            "format": "bech32",
            "type": "string"
        },
        "GYAssetClass": {
            "description": "This is an asset class, i.e. either lovelace or some other token with its minting policy and token name.",
            "example": "ff80aaaf03a273b8f5c558168dc0e2377eea810badbae6eceefc14ef.GOLD",
            "maxProperties": 1,
            "minProperties": 1,
            "properties": {
                "GYLovelace": {
                    "example": [],
                    "items": {},
                    "maxItems": 0,
                    "type": "array"
                },
                "GYToken": {
                    "type": "string"
                }
            },
            "type": "string"
        },
        "GYNatural": {
            "description": "A natural number which is a non-negative integer. Minimum value is 0.",
            "example": "123456789123456789123456789123456789123456789",
            "type": "string"
        },
        "GYPubKeyHash": {
            "description": "The hash of a public key.",
            "example": "e1cbb80db89e292269aeb93ec15eb963dda5176b66949fe1c2a6a38d",
            "format": "hex",
            "maxLength": 56,
            "minLength": 56,
            "type": "string"
        },
        "GYTx": {
            "type": "string"
        },
        "GYTxId": {
            "example": "a8d75b90a052302c1232bedd626720966b1697fe38de556c617c340233688935",
            "type": "string"
        },
        "GYTxOutRef": {
            "example": "4293386fef391299c9886dc0ef3e8676cbdbc2c9f2773507f1f838e00043a189#1",
            "format": "hex",
            "pattern": "[0-9a-fA-F]{64}#\"d+",
            "type": "string"
        },
        "Market": {
            "description": "Market information",
            "properties": {
                "base_asset": {
                    "$ref": "#/definitions/GYAssetClass"
                },
                "base_asset_decimals": {
                    "format": "int64",
                    "maximum": 1.8446744073709551615e19,
                    "minimum": 0,
                    "type": "integer"
                },
                "base_asset_ticker": {
                    "type": "string"
                },
                "market_id": {
                    "$ref": "#/definitions/OrderAssetPair"
                },
                "target_asset": {
                    "$ref": "#/definitions/GYAssetClass"
                },
                "target_asset_decimals": {
                    "format": "int64",
                    "maximum": 1.8446744073709551615e19,
                    "minimum": 0,
                    "type": "integer"
                },
                "target_asset_ticker": {
                    "type": "string"
                }
            },
            "required": [
                "market_id",
                "base_asset",
                "target_asset"
            ],
            "type": "object"
        },
        "OrderAssetPair": {
            "description": "Market pair identifier. It's an underscore delimited concatenation of offered and asked asset's \"token detail\". A token detail is given by dot delimited concatenation of policy id and token name.",
            "example": "f43a62fdc3965df486de8a0d32fe800963589c41b38946602a0dc535.41474958_dda5fdb1002f7389b33e036b6afee82a8189becb6cba852e8b79b4fb.0014df1047454e53",
            "type": "string"
        },
        "OrderBookInfo": {
            "properties": {
                "asks": {
                    "items": {
                        "$ref": "#/definitions/OrderInfo"
                    },
                    "type": "array"
                },
                "bids": {
                    "items": {
                        "$ref": "#/definitions/OrderInfo"
                    },
                    "type": "array"
                },
                "market_pair_id": {
                    "$ref": "#/definitions/OrderAssetPair"
                }
            },
            "required": [
                "market_pair_id",
                "bids",
                "asks"
            ],
            "type": "object"
        },
        "OrderInfo": {
            "properties": {
                "end": {
                    "description": "This is the posix time in ISO8601 format.",
                    "example": "1970-01-01T00:00:00Z",
                    "format": "ISO8601",
                    "type": "string"
                },
                "offer_amount": {
                    "$ref": "#/definitions/GYNatural"
                },
                "output_reference": {
                    "$ref": "#/definitions/GYTxOutRef"
                },
                "owner_address": {
                    "$ref": "#/definitions/GYAddressBech32"
                },
                "owner_key_hash": {
                    "$ref": "#/definitions/GYPubKeyHash"
                },
                "price": {
                    "example": "0.125",
                    "format": "float",
                    "type": "string"
                },
                "start": {
                    "description": "This is the posix time in ISO8601 format.",
                    "example": "1970-01-01T00:00:00Z",
                    "format": "ISO8601",
                    "type": "string"
                }
            },
            "required": [
                "offer_amount",
                "price",
                "owner_address",
                "owner_key_hash",
                "output_reference"
            ],
            "type": "object"
        },
        "PlaceOrderParameters": {
            "description": "Place order request parameters.",
            "properties": {
                "address": {
                    "$ref": "#/definitions/GYAddressBech32"
                },
                "collateral": {
                    "$ref": "#/definitions/GYTxOutRef"
                },
                "end": {
                    "description": "This is the posix time in ISO8601 format.",
                    "example": "1970-01-01T00:00:00Z",
                    "format": "ISO8601",
                    "type": "string"
                },
                "offer_amount": {
                    "$ref": "#/definitions/GYNatural"
                },
                "offer_token": {
                    "$ref": "#/definitions/GYAssetClass"
                },
                "price_amount": {
                    "$ref": "#/definitions/GYNatural"
                },
                "price_token": {
                    "$ref": "#/definitions/GYAssetClass"
                },
                "start": {
                    "description": "This is the posix time in ISO8601 format.",
                    "example": "1970-01-01T00:00:00Z",
                    "format": "ISO8601",
                    "type": "string"
                }
            },
            "required": [
                "address",
                "collateral",
                "offer_token",
                "offer_amount",
                "price_token",
                "price_amount"
            ],
            "type": "object"
        },
        "PlaceOrderTransactionDetails": {
            "properties": {
                "lovelace_deposit": {
                    "$ref": "#/definitions/GYNatural"
                },
                "maker_lovelace_flat_fee": {
                    "exclusiveMinimum": false,
                    "minimum": 0,
                    "type": "integer"
                },
                "maker_offered_percent_fee": {
                    "example": "0.125",
                    "format": "float",
                    "type": "string"
                },
                "maker_offered_percent_fee_amount": {
                    "$ref": "#/definitions/GYNatural"
                },
                "transaction": {
                    "$ref": "#/definitions/GYTx"
                },
                "transaction_fee": {
                    "exclusiveMinimum": false,
                    "minimum": 0,
                    "type": "integer"
                },
                "transaction_id": {
                    "$ref": "#/definitions/GYTxId"
                }
            },
            "required": [
                "transaction",
                "transaction_id",
                "transaction_fee",
                "maker_lovelace_flat_fee",
                "maker_offered_percent_fee",
                "maker_offered_percent_fee_amount",
                "lovelace_deposit"
            ],
            "type": "object"
        },
        "Settings": {
            "description": "Genius Yield Server settings.",
            "properties": {
                "backend": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "revision": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "required": [
                "network",
                "version",
                "revision",
                "backend"
            ],
            "type": "object"
        },
        "TradingFees": {
            "description": "Trading fees of DEX.",
            "properties": {
                "flat_maker_fee": {
                    "$ref": "#/definitions/GYNatural"
                },
                "flat_taker_fee": {
                    "$ref": "#/definitions/GYNatural"
                },
                "percentage_maker_fee": {
                    "example": "0.125",
                    "format": "float",
                    "type": "string"
                },
                "percentage_taker_fee": {
                    "example": "0.125",
                    "format": "float",
                    "type": "string"
                }
            },
            "required": [
                "flat_maker_fee",
                "flat_taker_fee",
                "percentage_maker_fee",
                "percentage_taker_fee"
            ],
            "type": "object"
        }
    },
    "info": {
        "description": "This API is used to interact with GeniusYield DEX.",
        "title": "Genius Yield Haskell Server API",
        "version": "1.0"
    },
    "paths": {
        "/v1/markets": {
            "get": {
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Market"
                            },
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/v1/orders/cancel/tx/generate": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CancelOrderParameters"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CancelOrderTransactionDetails"
                        }
                    },
                    "400": {
                        "description": "Invalid `body`"
                    }
                }
            }
        },
        "/v1/orders/open/tx/generate": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PlaceOrderParameters"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PlaceOrderTransactionDetails"
                        }
                    },
                    "400": {
                        "description": "Invalid `body`"
                    }
                }
            }
        },
        "/v1/orders/{market_id}": {
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "market_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "bech32",
                        "in": "query",
                        "name": "address",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OrderBookInfo"
                        }
                    },
                    "400": {
                        "description": "Invalid `address` or `market_id`"
                    }
                }
            }
        },
        "/v1/settings": {
            "get": {
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Settings"
                        }
                    }
                }
            }
        },
        "/v1/trading_fees": {
            "get": {
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TradingFees"
                        }
                    }
                }
            }
        },
        "/v1/tx/sign": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GYTx"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GYTx"
                        }
                    },
                    "400": {
                        "description": "Invalid `body`"
                    }
                }
            }
        },
        "/v1/tx/sign_and_submit": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GYTx"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GYTxId"
                        }
                    },
                    "400": {
                        "description": "Invalid `body`"
                    }
                }
            }
        },
        "/v1/tx/submit": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GYTx"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GYTxId"
                        }
                    },
                    "400": {
                        "description": "Invalid `body`"
                    }
                }
            }
        }
    },
    "swagger": "2.0"
}